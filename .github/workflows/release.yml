name: ci

on:
  push:
    branches:
      - main            # only build main; snap/** won't run
    tags:
      - 'v*.*.*'        # also build when pushing a tag like v1.2.3
  pull_request:
    branches:
      - main
  workflow_dispatch: {}  # still allow manual runs if you ever want

permissions:
  contents: write
  packages: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    name: Build (Vite)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Use public npm registry
        run: npm config set registry https://registry.npmjs.org/

      - name: Install
        run: npm ci

      - name: Build
        run: npm run build --if-present

      - name: Upload dist artifact (if present)
        if: ${{ hashFiles('dist/**') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/**

  prerelease_main:
    name: Prerelease (main push)
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Download dist artifact (if uploaded)
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
        continue-on-error: true

      - name: Create draft prerelease
        uses: softprops/action-gh-release@v2
        with:
          name: "build-main-${{ github.sha }}"
          tag_name: "build-main-${{ github.sha }}"
          draft: true
          prerelease: true
          generate_release_notes: false
          files: |
            dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release_tag:
    name: Release (tag)
    needs: build
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - name: Download dist artifact (if uploaded)
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
        continue-on-error: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: |
            dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  npm_publish:
    name: Publish to npm (optional)
    needs: release_tag
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}   # expose once as env
    if: ${{ env.NPM_TOKEN != '' && startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci
      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ env.NPM_TOKEN }}
