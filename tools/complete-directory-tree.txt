================================================================================
COMPLETE DIRECTORY STRUCTURE
Generated: 2025-10-06 10:31:59
================================================================================

C:\Users\david\Local Sites\main-dashboard\app\public\budget-dashboard-fs\
├── save.php                           # Backend endpoint (stays at root level)
└── ui\
    ├── node_modules\                  # Dependencies (not tracked in git)
    ├── public\
    │   └── restore\
    │       └── budget-data.json       # Primary data file (reviewed)
    ├── src\
    │   ├── components\
    │   │   ├── tabs\
    │   │   │   ├── AnalysisTab.jsx           # Analysis with charts (reviewed)
    │   │   │   ├── CalculatorTab.jsx         # 6 calculators (reviewed)
    │   │   │   ├── DashboardTab.jsx          # Summary view (reviewed)
    │   │   │   └── EditorTab.jsx             # Full editor (reviewed)
    │   │   ├── modern\
    │   │   │   ├── EmergencyFundWidget.jsx   # Auto-calculating tracker (reviewed)
    │   │   │   ├── FinancialHealthCard.jsx   # Health metrics (reviewed)
    │   │   │   ├── HealthRecommendations.jsx # Personalized tips (reviewed)
    │   │   │   ├── NotificationPanel.jsx     # Bell icon dropdown (reviewed)
    │   │   │   └── SpendingTrendsChart.jsx   # 6-month trends (reviewed)
    │   │   ├── statements\
    │   │   │   └── StatementScanner.jsx      # OCR for statements (reviewed)
    │   │   ├── receipts\
    │   │   │   └── CameraCapture.jsx         # Camera for receipts (reviewed)
    │   │   ├── ui\
    │   │   │   └── ArchivedDrawer.jsx        # Archive drawer (reviewed)
    │   │   ├── common\
    │   │   │   ├── LoadingGate.jsx           # Init wrapper (reviewed)
    │   │   │   ├── PageContainer.jsx         # Layout wrapper (reviewed)
    │   │   │   └── StickyToolbar.jsx         # Top navigation (reviewed)
    │   │   └── BudgetDashboard.jsx           # Main app component (reviewed)
    │   ├── utils\
    │   │   ├── statements\
    │   │   │   └── statementParser.js        # Parse transactions (reviewed)
    │   │   ├── receipts\
    │   │   │   └── ocr.js                    # OCR utilities (reviewed)
    │   │   ├── financialHealthScore.js       # Health scoring (reviewed)
    │   │   └── state.js                      # State manager (reviewed)
    │   ├── App.jsx                           # Root component (reviewed)
    │   ├── main.jsx                          # React entry point (reviewed)
    │   └── index.css                         # Global styles (reviewed)
    ├── tools\
    │   ├── src-tree.txt                      # Generated file list
    │   ├── complete-directory-tree.txt       # This file
    │   └── [various .ps1 scripts]            # PowerShell utilities
    ├── dist\                                 # Built frontend (generated by Vite)
    ├── index.html                            # HTML entry point (reviewed)
    ├── package.json                          # Dependencies (reviewed)
    ├── vite.config.js                        # Vite config (reviewed)
    ├── postcss.config.cjs                    # PostCSS/Tailwind (reviewed)
    ├── .gitignore                            # Git ignore rules
    └── README.md                             # Project documentation

================================================================================
ALL FILES REVIEWED (28 TOTAL)
================================================================================

Core Components (4):
  ✅ BudgetDashboard.jsx
  ✅ App.jsx
  ✅ main.jsx
  ✅ index.html

Tab Components (4):
  ✅ DashboardTab.jsx
  ✅ EditorTab.jsx
  ✅ AnalysisTab.jsx
  ✅ CalculatorTab.jsx

Modern Components (5):
  ✅ EmergencyFundWidget.jsx
  ✅ NotificationPanel.jsx
  ✅ SpendingTrendsChart.jsx
  ✅ FinancialHealthCard.jsx
  ✅ HealthRecommendations.jsx

Common Components (3):
  ✅ LoadingGate.jsx
  ✅ PageContainer.jsx
  ✅ StickyToolbar.jsx

UI Components (2):
  ✅ ArchivedDrawer.jsx
  ✅ StatementScanner.jsx

Receipt/Camera (1):
  ✅ CameraCapture.jsx

Utils & State (4):
  ✅ state.js - Triple-save state manager
  ✅ financialHealthScore.js - Financial health calculations
  ✅ statementParser.js - Bank statement parser
  ✅ ocr.js - PDF/image OCR utilities

Data & Config (6):
  ✅ budget-data.json
  ✅ save.php
  ✅ package.json
  ✅ vite.config.js
  ✅ postcss.config.cjs
  ✅ index.css

================================================================================
KEY UTILITY FILES DETAILS
================================================================================

financialHealthScore.js:
  - Calculates 0-100 health score from budget data
  - 5 weighted factors: Income/Expense Ratio (30%), Savings Rate (25%),
    Debt Ratio (20%), Category Balance (15%), Budget Adherence (10%)
  - Generates prioritized recommendations
  - Tracks score history in localStorage (90 days)
  - Category balance recommendations (housing 25-30%, transport 10-15%, etc.)
  - Null-safe throughout

statementParser.js:
  - Parses bank/credit card statement text
  - Supports table format (tabs/spaces) and single-line format
  - Extracts: date, merchant, amount, transaction type
  - Auto-categorizes to budget buckets
  - Handles deposits, purchases, fees, refunds
  - Converts to budget items ready for import

ocr.js:
  - PDF to canvas conversion using pdfjs-dist
  - Image preprocessing: grayscale, denoising, thresholding
  - Otsu's method for automatic threshold detection
  - Canvas manipulation and rotation
  - Multi-page PDF support with progress callback

CameraCapture.jsx:
  - getUserMedia API for camera access
  - Front/back camera switching
  - Captures high-res photo to canvas (1920x1080 ideal)
  - Clean modal UI with inline styles
  - Proper stream cleanup on unmount

================================================================================
NOTES
================================================================================

1. save.php is intentionally at parent level (budget-dashboard-fs/) for proper
   backend/frontend separation. Do not move into ui/ directory.

2. tailwind.config.js does not exist - project uses Tailwind 4's @tailwindcss/vite
   plugin which doesn't require a config file.

3. All utility files are present and functional. No missing dependencies.

4. Statement Scanner fully functional with OCR support via Tesseract.js

5. Financial Health features fully operational with score calculations and
   automated recommendations.

6. Complete feature set: Emergency Fund tracking, Notifications, Analysis charts,
   Statement scanning, Archive system, 6 calculators, Health scoring.

7. Triple-save system: JSON file + localStorage + WordPress DB (all working)

================================================================================
END OF DIRECTORY STRUCTURE
================================================================================
